name: Build and Push Docker Images

on:
  push:
    branches: [ main, staging ]

env:
  REGISTRY: docker.io
  BASE_IMAGE_NAME: campinator/gridllm

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        app: [server, client]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Determine image tags
      id: tags
      run: |
        APP_NAME="${{ matrix.app }}"
        
        if [[ $GITHUB_REF == refs/heads/main ]]; then
          echo "tags=${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}-${APP_NAME}:latest" >> $GITHUB_OUTPUT
          echo "build_type=production" >> $GITHUB_OUTPUT
        elif [[ $GITHUB_REF == refs/heads/staging ]]; then
          echo "tags=${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}-${APP_NAME}:nightly,${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}-${APP_NAME}:nightly" >> $GITHUB_OUTPUT
          echo "build_type=staging" >> $GITHUB_OUTPUT
        fi

    - name: Build and push ${{ matrix.app }} Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.app }}
        file: ./${{ matrix.app }}/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.tags.outputs.tags }}
        labels: |
          org.opencontainers.image.title=${{ env.BASE_IMAGE_NAME }}-${{ matrix.app }}
          org.opencontainers.image.description=${{ matrix.app }} application built from ${{ steps.tags.outputs.build_type }}
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
        cache-from: type=gha,scope=${{ matrix.app }}
        cache-to: type=gha,mode=max,scope=${{ matrix.app }}

    - name: Image digest
      run: echo "${{ matrix.app }} image pushed successfully"